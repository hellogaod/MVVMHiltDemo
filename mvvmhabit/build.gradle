plugins {
    id 'com.android.library'
    id 'kotlin-kapt'//当前模块可以使用kapt替代annotationProcessor
    id 'kotlin-android'//当前模块可以使用kotlin语言
    id 'dagger.hilt.android.plugin'//当前模块使用hilt插件
}

android {
    namespace 'com.example.mvvmhabit'
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
}

dependencies {

    testImplementation rootProject.ext.support["junit"]

    implementation rootProject.ext.jetpack["coreKtx"]
    implementation rootProject.ext.jetpack["appcompat"]

    //rx权限请求
    api(rootProject.ext.dependencies.rxpermissions) {
        exclude group: 'com.android.support'
    }

    // Hilt
    implementation rootProject.ext.dependencies["hiltAndroid"]
    kapt rootProject.ext.dependencies["hiltCompiler"]

    //rxjava
    api rootProject.ext.dependencies.rxjava
    api rootProject.ext.dependencies.rxandroid

    //material-dialogs
    api(rootProject.ext.dependencies["material-dialogs-core"]) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["material-dialogs-commons"]) {
        exclude group: 'com.android.support'
    }

    // Glide
    implementation rootProject.ext.dependencies["glide"]
    kapt rootProject.ext.dependencies["glideCompiler"]

    api rootProject.ext.dependencies.rxbinding

    api rootProject.ext.jetpack["recyclerview"]

    // Retrofit for networking
    api(platform(rootProject.ext.dependencies["okhttpBom"]))
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["okhttpLogginInterceptor"]

    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofitKotlinCoroutinesAdapter"]
    api rootProject.ext.dependencies["retrofitConverterMoshi"]
    api rootProject.ext.dependencies["adapterRxjava"]

    api rootProject.ext.dependencies["tkrefreshlayout"]

}